
    <style>
        .footer {
            width: 100%;
        }
        .error-message {
            color: red;
            font-size: 0.9em;
            margin-top: 5px;
        }
    </style>
</head>
<body>
<main role="main" class="content col-md-9">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Change Password</h1>
    </div>
    <div class="container">
        <form id="changePasswordForm">
            <div class="mb-3">
                <label for="oldPassword" class="form-label">Old Password</label>
                <input type="password" class="form-control" id="oldPassword" placeholder="Old password" required style="width: 400px;">
                <div class="error-message" id="oldPasswordError"></div>
            </div>
            <div class="mb-3">
                <label for="newPassword" class="form-label">New Password</label>
                <input type="password" class="form-control" id="newPassword" placeholder="New password" required style="width: 400px;">
                <div class="error-message" id="newPasswordError"></div>
            </div>
            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <input type="password" class="form-control" id="confirmPassword" placeholder="Confirm password" required style="width: 400px;">
                <div class="error-message" id="confirmPasswordError"></div>
            </div>
            <button type="submit" class="btn btn-primary">Change Password</button>
        </form>
    </div>
</main>

  <script>
    document.getElementById('changePasswordForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent default form submission

        // Clear previous error messages
        document.getElementById('oldPasswordError').textContent = '';
        document.getElementById('newPasswordError').textContent = '';
        document.getElementById('confirmPasswordError').textContent = '';

        // Get values from the form
        const oldPassword = document.getElementById('oldPassword').value.trim();
        const newPassword = document.getElementById('newPassword').value.trim();
        const confirmPassword = document.getElementById('confirmPassword').value.trim();

        let valid = true;

        // Validate fields
        if (!oldPassword) {
            document.getElementById('oldPasswordError').textContent = "Old password is required.";
            valid = false;
        }

        if (!newPassword) {
            document.getElementById('newPasswordError').textContent = "New password is required.";
            valid = false;
        } else if (newPassword.length < 6) {
            document.getElementById('newPasswordError').textContent = "New password must be at least 6 characters long.";
            valid = false;
        }

        if (!confirmPassword) {
            document.getElementById('confirmPasswordError').textContent = "Confirm password is required.";
            valid = false;
        } else if (newPassword !== confirmPassword) {
            document.getElementById('confirmPasswordError').textContent = "New password and confirm password do not match.";
            valid = false;
        }

        // If validation is successful, call the fetch function to submit
        if (valid) {
            changePassword(oldPassword, newPassword);
        }
    });

    function changePassword(oldPassword, newPassword) {
    const apiEndpoint = '/updatePassword';

    fetch(apiEndpoint, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ oldPassword, newPassword }),
    })
    .then(response => {
        // First, check if the response status is OK (200)
        if (!response.ok) {
            throw response;  // Throw the response to handle it in the catch block
        }
        return response.json();  // Convert the response to JSON
    })
    .then(data => {
        // If password update is successful
        if (data.success) {
            Swal.fire({
                title: "Success!",
                text: "Password changed successfully! Please log in again.",
                icon: "success",
                confirmButtonText: "OK"
            }).then(() => {
                logout(); // Call your logout function here
            });
            document.getElementById('changePasswordForm').reset();
        }
    })
    .catch(async (response) => {
        // If there is a problem with the network or response is not OK
        let errorData;
        if (response instanceof Response) {
            errorData = await response.json();  // Parse the response as JSON if possible
        } else {
            errorData = { message: 'An unknown error occurred.' };
        }
        // Display error messages from server
        if (errorData.noMatch === "ok") {
            document.getElementById('oldPasswordError').textContent = "Old password is incorrect.";
        } else {
            Swal.fire({
                title: "Error",
                text: errorData.message || 'There was a problem with your request.',
                icon: "error",
                confirmButtonText: "OK"
            });
        }
    });
}


    function logout() {
        // Your logout logic here, e.g., redirecting to a logout endpoint
        window.location.href = '/logout'; // Change this to your logout route
    }
</script>


